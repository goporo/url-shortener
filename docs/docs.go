// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "email": "support@urlshortener.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/urls": {
            "get": {
                "description": "Returns a list of all shortened URLs created within the last 7 days",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Get all shortened URLs",
                "operationId": "getAllShortURLs",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/URL"
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new shortened URL for the provided original URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Create a new short URL",
                "operationId": "createShortURL",
                "parameters": [
                    {
                        "description": "URL to be shortened",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "url"
                            ],
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "example": "https://example.com/very/long/url/path"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "URL successfully shortened",
                        "schema": {
                            "$ref": "#/definitions/URL"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to store URL",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/urls/{shortCode}": {
            "get": {
                "description": "Redirects to the original URL associated with the short code",
                "tags": [
                    "urls"
                ],
                "summary": "Redirect to original URL",
                "operationId": "getOriginalURL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short code of the URL",
                        "name": "shortCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to original URL"
                    },
                    "404": {
                        "description": "Short URL not found"
                    }
                }
            },
            "put": {
                "description": "Updates the original URL for an existing short code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Update a short URL",
                "operationId": "updateShortURL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short code of the URL to update",
                        "name": "shortCode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New URL",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "required": [
                                "url"
                            ],
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "example": "https://example.com/new/url/path"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Short URL not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a shortened URL by its short code",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Delete a short URL",
                "operationId": "deleteShortURL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short code of the URL to delete",
                        "name": "shortCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL deleted successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Short URL not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/urls/{shortCode}/stats": {
            "get": {
                "description": "Returns statistics for a shortened URL",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "urls"
                ],
                "summary": "Get URL statistics",
                "operationId": "getURLStats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Short code of the URL",
                        "name": "shortCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/URL"
                        }
                    },
                    "404": {
                        "description": "Short URL not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "URL": {
            "type": "object",
            "properties": {
                "accessCount": {
                    "type": "integer",
                    "format": "int64"
                },
                "createdAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "original": {
                    "type": "string"
                },
                "shortCode": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "URL Shortener API",
	Description:      "API for shortening URLs, managing redirects, and tracking statistics",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
